[{"/home/nisha/Documents/fbw32/redux/src/index.js":"1","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/styles.js":"2","/home/nisha/Documents/fbw32/redux/src/Redux/Root.js":"3","/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/authReducer.js":"4","/home/nisha/Documents/fbw32/redux/src/App.jsx":"5","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/Login.jsx":"6","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/styles.js":"7","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/Register.jsx":"8","/home/nisha/Documents/fbw32/redux/src/Redux/Action/authAction.js":"9","/home/nisha/Documents/fbw32/redux/src/store.js":"10","/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/postReducer.js":"11","/home/nisha/Documents/fbw32/redux/src/Redux/Action/postAction.js":"12","/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/styles.js":"13","/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/AddPosts.jsx":"14","/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/styles.jsx":"15","/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/EditPost.jsx":"16","/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/Navigation.jsx":"17","/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/styles.jsx":"18","/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/Auth.js":"19","/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/styles.jsx":"20","/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/Posts.jsx":"21","/home/nisha/Documents/fbw32/redux/src/Components/Posts/Comment/Comment.jsx":"22","/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/Post.jsx":"23","/home/nisha/Documents/fbw32/redux/src/Components/Posts/Comment/styles.jsx":"24","/home/nisha/Documents/fbw32/redux/src/Components/Search/Search.jsx":"25","/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/userReducer.js":"26","/home/nisha/Documents/fbw32/redux/src/Redux/Action/userAction.js":"27","/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/SnackbarStatus.js":"28","/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/CheckAuth.js":"29","/home/nisha/Documents/fbw32/redux/src/Components/Auth/ifAuth.js":"30","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyProfile.jsx":"31","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/UserInfo.jsx":"32","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyProfileView.jsx":"33","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyInfo.jsx":"34","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyPosts.jsx":"35","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyFriends.jsx":"36","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/UserProfile.jsx":"37","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/UserFriends.jsx":"38","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/userPosts.jsx":"39","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/styles.jsx":"40"},{"size":414,"mtime":1606505419862,"results":"41","hashOfConfig":"42"},{"size":474,"mtime":1606507128238,"results":"43","hashOfConfig":"42"},{"size":291,"mtime":1607523604859,"results":"44","hashOfConfig":"42"},{"size":1650,"mtime":1607525233994,"results":"45","hashOfConfig":"42"},{"size":1298,"mtime":1607960486004,"results":"46","hashOfConfig":"42"},{"size":2821,"mtime":1607523604851,"results":"47","hashOfConfig":"42"},{"size":474,"mtime":1606508105857,"results":"48","hashOfConfig":"42"},{"size":2733,"mtime":1607523604851,"results":"49","hashOfConfig":"42"},{"size":1939,"mtime":1607959664931,"results":"50","hashOfConfig":"42"},{"size":435,"mtime":1607523604859,"results":"51","hashOfConfig":"42"},{"size":1226,"mtime":1607523604859,"results":"52","hashOfConfig":"42"},{"size":2453,"mtime":1607959652211,"results":"53","hashOfConfig":"42"},{"size":377,"mtime":1606745141703,"results":"54","hashOfConfig":"42"},{"size":2506,"mtime":1607523604855,"results":"55","hashOfConfig":"42"},{"size":377,"mtime":1606747316289,"results":"56","hashOfConfig":"42"},{"size":1479,"mtime":1607523604855,"results":"57","hashOfConfig":"42"},{"size":6871,"mtime":1607960508900,"results":"58","hashOfConfig":"42"},{"size":1732,"mtime":1607550719023,"results":"59","hashOfConfig":"42"},{"size":420,"mtime":1607523604851,"results":"60","hashOfConfig":"42"},{"size":626,"mtime":1607961922872,"results":"61","hashOfConfig":"42"},{"size":614,"mtime":1607971274257,"results":"62","hashOfConfig":"42"},{"size":1893,"mtime":1607532429251,"results":"63","hashOfConfig":"42"},{"size":5442,"mtime":1607986125765,"results":"64","hashOfConfig":"42"},{"size":377,"mtime":1607523604855,"results":"65","hashOfConfig":"42"},{"size":1477,"mtime":1607523604859,"results":"66","hashOfConfig":"42"},{"size":988,"mtime":1607950712077,"results":"67","hashOfConfig":"42"},{"size":2716,"mtime":1607959636643,"results":"68","hashOfConfig":"42"},{"size":946,"mtime":1607525161329,"results":"69","hashOfConfig":"42"},{"size":220,"mtime":1607523604851,"results":"70","hashOfConfig":"42"},{"size":185,"mtime":1607617044451,"results":"71","hashOfConfig":"42"},{"size":2597,"mtime":1607892948435,"results":"72","hashOfConfig":"42"},{"size":1081,"mtime":1607951096631,"results":"73","hashOfConfig":"42"},{"size":2006,"mtime":1607982201616,"results":"74","hashOfConfig":"42"},{"size":2117,"mtime":1607896646840,"results":"75","hashOfConfig":"42"},{"size":2469,"mtime":1607955881633,"results":"76","hashOfConfig":"42"},{"size":1094,"mtime":1607958768417,"results":"77","hashOfConfig":"42"},{"size":2052,"mtime":1607954644504,"results":"78","hashOfConfig":"42"},{"size":919,"mtime":1607955012354,"results":"79","hashOfConfig":"42"},{"size":8550,"mtime":1607598393023,"results":"80","hashOfConfig":"42"},{"size":394,"mtime":1607597795571,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"4xq3wd",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"93"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"93"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"/home/nisha/Documents/fbw32/redux/src/index.js",[],["188","189"],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/styles.js",[],["190","191"],"/home/nisha/Documents/fbw32/redux/src/Redux/Root.js",[],["192","193"],"/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/authReducer.js",[],["194","195"],"/home/nisha/Documents/fbw32/redux/src/App.jsx",["196"],"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport AddPost from './Components/Posts/AddPost/AddPosts';\nimport Posts from './Components/Posts/ViewPost/Posts';\nimport { getPost } from './Redux/Action/postAction';\nimport Navigation from './Components/Container/Navigation/Navigation';\nimport CheckAuth from './Components/Auth/AuthInfo/CheckAuth';\nimport IfAuth from './Components/Auth/ifAuth';\nimport UserProfile from './Components/UserProfile/UserProfile';\n\nimport StatusSnackbar from './Components/Auth/AuthInfo/SnackbarStatus';\nimport MyProfileView from './MyProfile/MyProfileView';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.auth.refreshToken);\n\n  useEffect(() => {\n    dispatch(getPost());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <CheckAuth />\n      <StatusSnackbar />\n      <IfAuth>\n        <Navigation />\n\n        <Switch>\n          <Route path='/post/add' component={AddPost} />\n          <Route exact path='/nisa' component={Posts} />\n          <Route path='/user/:id' component={UserProfile} />\n          <Route path='/profile/:id' component={MyProfileView} />\n        </Switch>\n      </IfAuth>\n    </div>\n  );\n}\n\nexport default App;\n",["197","198"],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/Login.jsx",["199","200"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useStyles } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../../Redux/Action/authAction';\nimport { useHistory } from 'react-router-dom';\nimport SnackBar from '../AuthInfo/SnackbarStatus';\nimport SnackbarStatus from '../AuthInfo/SnackbarStatus';\n\nfunction Login() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [state, setState] = useState({\n    email: 'nishashukla@email.com',\n    password: 'nisha1234',\n  });\n\n  return (\n    <>\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant='outlined'\n              margin='normal'\n              required\n              fullWidth\n              defaultValue='nishashukla@email.com'\n              type='email'\n              label='Email Address'\n              autoFocus\n              onChange={(e) => setState({ ...state, email: e.target.value })}\n            />\n            <TextField\n              variant='outlined'\n              margin='normal'\n              required\n              fullWidth\n              label='Password'\n              type='password'\n              defaultValue='nisha1234'\n              onChange={(e) => setState({ ...state, password: e.target.value })}\n            />\n\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch(login(state, history));\n              }}\n            >\n              Login\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item>\n                <Link href='/register' variant='body2'>\n                  {\"Don't have an account? Register!\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Login;\n","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/styles.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/Register.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Redux/Action/authAction.js",[],"/home/nisha/Documents/fbw32/redux/src/store.js",["201"],"import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './Redux/Root';\nimport axios from 'axios';\n\nconst composeWithDevTool =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  Root,\n  composeWithDevTool(applyMiddleware(thunk))\n);\n\nstore.subscribe(() => {\n  localStorage.setItem('sample', JSON.stringify(store.getState().auth));\n});\n",["202","203"],"/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/postReducer.js",["204","205","206","207"],"const defaultState = {\n  postData: [],\n};\n\nconst postReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'GET_POST':\n      return {\n        ...state,\n        postData: action.postData,\n      };\n\n    case 'ADD_POST':\n      return {\n        ...state,\n        postData: [action.postData, ...state.postData],\n      };\n\n    case 'COMMENT_POST':\n      return {\n        ...state,\n        postData: [action.postData, ...state.postData],\n      };\n\n    case 'EDIT_POST':\n      let newPostData = [...state.postData].map((post) =>\n        post.id == action.postData.id ? action.postData : post\n      );\n      return {\n        ...state,\n        postData: [action.postData, ...state.postData],\n      };\n\n    case 'REMOVE_POST':\n      return state;\n\n    case 'LIKE_POST':\n      return {\n        ...state,\n\n        postData: [...state.postData].map((post) =>\n          post.id == action.postData.id ? action.postData : post\n        ),\n      };\n\n    case 'DELETE_REACTION':\n      return {\n        ...state,\n\n        postData: [...state.postData].map((post) =>\n          post.id == action.postData.id ? action.postData : post\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","/home/nisha/Documents/fbw32/redux/src/Redux/Action/postAction.js",[],["208","209"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/styles.js",[],["210","211"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/AddPosts.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/styles.jsx",[],["212","213"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/EditPost.jsx",["214"],"import {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  TextField,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { editPost } from '../../../Redux/Action/postAction';\n\nexport default function Editpost({ post, setSelected }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [editPostMessage, setEditPostMessage] = useState({\n    message: post.message,\n    id: post.id,\n  });\n\n  return (\n    <Card className={classes.root} variant='outlined'>\n      <CardHeader title='Edit Post' />\n      <form noValidate>\n        <div>\n          <TextField\n            id='outlined-multiline-static'\n            label='Edit Your Post '\n            multiline\n            rows={4}\n            value={editPostMessage.message}\n            onChange={(e) =>\n              setEditPostMessage({\n                ...editPostMessage,\n                message: e.target.value,\n              })\n            }\n            variant='outlined'\n          />\n        </div>\n        <CardActions>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(editPost(editPostMessage));\n              setSelected(-1);\n            }}\n          >\n            SavePost\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n}\n","/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/Navigation.jsx",["215","216"],"import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useStyles } from './styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Logo from '../../Logo/croped.png';\nimport { getPost } from '../../../Redux/Action/postAction';\nimport { logout, unregister } from '../../../Redux/Action/authAction';\nimport Search from '../../Search/Search';\n\nexport default function Navigation() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const state = useSelector((state) => state.auth);\n  useEffect(() => {\n    dispatch(getPost());\n  }, [dispatch]);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose} className={classes.mobileicon}>\n        <Link to={`/profile/${state.userData.user.id}`}>Profile</Link>\n      </MenuItem>\n\n      <MenuItem onClick={handleMenuClose} className={classes.mobileicon}>\n        <Link to='/setting'>Setting</Link>\n      </MenuItem>\n\n      <MenuItem onClick={handleMenuClose} className={classes.mobileicon}>\n        <Link to='/post/add'>AddPost</Link>\n      </MenuItem>\n\n      <MenuItem\n        onClick={() => {\n          dispatch(logout(state.refreshToken));\n        }}\n      >\n        Logout\n      </MenuItem>\n\n      <MenuItem\n        onClick={() => {\n          dispatch(unregister(state.userData.user.id, state.token));\n        }}\n      >\n        Unregister\n      </MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <div className={classes.mobileicon}>\n        <Link to='/message'>\n          <MenuItem>\n            <IconButton aria-label='show 4 new mails' color='inherit'>\n              <Badge badgeContent={4} color='secondary'>\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <p>Messages</p>\n          </MenuItem>\n        </Link>\n\n        <Link to='/nisa'>\n          <MenuItem>\n            <IconButton color='inherit'>\n              <Badge>\n                <HomeIcon />\n              </Badge>\n            </IconButton>\n            <p>Home</p>\n          </MenuItem>\n        </Link>\n\n        <Link to='/group'>\n          <MenuItem>\n            <IconButton color='inherit'>\n              <Badge>\n                <GroupIcon />\n              </Badge>\n            </IconButton>\n            <p>Groups</p>\n          </MenuItem>\n        </Link>\n\n        <Link to='/notification'>\n          <MenuItem>\n            <IconButton aria-label='show 11 new notifications' color='inherit'>\n              <Badge badgeContent={11} color='secondary'>\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <p>Notifications</p>\n          </MenuItem>\n        </Link>\n      </div>\n\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label='account of current user'\n          aria-controls='primary-search-account-menu'\n          aria-haspopup='true'\n          color='inherit'\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position='static'>\n        <Toolbar>\n          <img src={Logo} alt='logo' className={classes.logo} />\n\n          <Search className={classes.search} />\n\n          <div className={classes.sectionDesktop}>\n            <div className={classes.linkicon}>\n              <Link to='/nisa'>\n                <HomeIcon />\n              </Link>\n            </div>\n\n            <div className={classes.linkicon}>\n              <Link to='/group'>\n                <GroupIcon />\n              </Link>\n            </div>\n          </div>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label='show 4 new mails' color='inherit'>\n              <Badge badgeContent={4} color='secondary'>\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label='show 17 new notifications' color='inherit'>\n              <Badge badgeContent={17} color='secondary'>\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge='end'\n              aria-label='account of current user'\n              aria-controls={menuId}\n              aria-haspopup='true'\n              onClick={handleProfileMenuOpen}\n              color='inherit'\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/styles.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/Auth.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/styles.jsx",[],["217","218"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/Posts.jsx",["219","220","221"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/Comment/Comment.jsx",["222","223","224"],"import {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  TextField,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { useStyles } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../../Redux/Action/postAction';\n\nexport default function Comment({ post, setSelected }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [commentPostMessage, setCommentPostMessage] = useState({\n    message: '',\n    id: post.id,\n  });\n\n  const [state, setState] = useState({ images: [] });\n\n  return (\n    <Card className={classes.root} variant='outlined'>\n      <CardHeader\n        title='Comment Post'\n        //subheader={'updated  ' + moment(post.createdAt).fromNow()}\n      />\n\n      <form noValidate>\n        {post.images.length > 0 ? (\n          <img\n            src={post.images || null}\n            alt=''\n            style={{\n              width: '200px',\n              height: '200px',\n              padding: '20px',\n            }}\n          />\n        ) : null}\n\n        <div>\n          <TextField\n            id='outlined-multiline-static'\n            label=' Comment Post '\n            multiline\n            rows={5}\n            value={commentPostMessage.message}\n            onChange={(e) =>\n              setCommentPostMessage({\n                ...commentPostMessage,\n                message: e.target.value,\n              })\n            }\n            variant='outlined'\n          />\n        </div>\n        <CardActions>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(commentPost(commentPostMessage));\n              setSelected(-1);\n            }}\n          >\n            SaveComment\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n}\n",["225","226"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/Post.jsx",["227","228","229","230","231","232","233"],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/Comment/styles.jsx",[],["234","235"],"/home/nisha/Documents/fbw32/redux/src/Components/Search/Search.jsx",["236"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n//import SearchIcon from '@material-ui/icons/Search';\nimport { searchUser } from '../../Redux/Action/userAction';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useStyles } from '../Container/Navigation/styles';\n\nexport default function Search() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { list } = useSelector((state) => state.users.search);\n\n  const change = (e) => dispatch(searchUser(e.target.value));\n  console.log(list);\n  const select = (e, v, r) => {\n    if (r === 'select-option') history.push(`/user/${v.id}`);\n  };\n\n  return (\n    <Autocomplete\n      freeSolo\n      style={{\n        width: '250px',\n        height: '40px',\n        backgroundColor: 'white',\n        borderRadius: 5,\n      }}\n      id='free-solo-2-demo'\n      disableClearable\n      options={list || []}\n      getOptionLabel={(o) => o.name}\n      onInputChange={change}\n      onChange={select}\n      debug={true}\n      renderInput={(params) => (\n        <TextField\n          style={{ marginTop: 0 }}\n          {...params}\n          size='small'\n          placeholder='search...'\n          margin='normal'\n          variant='outlined'\n          InputProps={{ ...params.InputProps, type: 'search' }}\n        />\n      )}\n    />\n  );\n}\n","/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/userReducer.js",[],"/home/nisha/Documents/fbw32/redux/src/Redux/Action/userAction.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/SnackbarStatus.js",["237"],"import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { statusHide, statusShow } from '../../../Redux/Action/authAction';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nexport default function StatusSnackbar() {\n  const state = useSelector(({ auth: { status, showStatus } }) => ({\n    status,\n    showStatus,\n  }));\n\n  const dispatch = useDispatch();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    dispatch(statusHide());\n  };\n  return (\n    <Snackbar\n      open={state.showStatus}\n      autoHideDuration={1000}\n      onClose={handleClose}\n    >\n      <Alert\n        onClose={handleClose}\n        severity={state.status.code ? 'error' : 'success'}\n      >\n        {state.status.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/CheckAuth.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/ifAuth.js",[],"/home/nisha/Documents/fbw32/redux/src/MyProfile/MyProfile.jsx",["238"],"/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/UserInfo.jsx",["239","240","241","242"],"import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addFriend,\n  getUser,\n  getUserPosts,\n} from '../../Redux/Action/userAction';\nimport { AppBar, Avatar, Tab, Tabs } from '@material-ui/core';\nimport { TabPanel } from '@material-ui/lab';\n//import Posts from '../Posts/ViewPost/Posts';\n\nfunction UserInfo() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  console.log(id);\n  const user = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(getUser(id));\n    dispatch(getUserPosts(id));\n  }, [dispatch, id]);\n\n  console.log(user.userPosts);\n\n  return (\n    <>\n      <Avatar\n        src={user.userData.avatar}\n        style={{\n          width: '150px',\n          height: '150px',\n          padding: '20px',\n        }}\n      />\n      <h1>{user.userData.name}</h1>\n      <h2>{user.userData.email}</h2>\n      <button onClick={() => dispatch(addFriend(user.userData.id))}>\n        Add User\n      </button>\n    </>\n  );\n}\n\nexport default UserInfo;\n","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyProfileView.jsx",[],"/home/nisha/Documents/fbw32/redux/src/MyProfile/MyInfo.jsx",["243","244","245","246","247"],"import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addFriend,\n  changeAvatar,\n  getUser,\n  getUserPosts,\n} from '../Redux/Action/userAction';\nimport { AppBar, Avatar, Tab, Tabs } from '@material-ui/core';\nimport { TabPanel } from '@material-ui/lab';\nimport { DropzoneDialog } from 'material-ui-dropzone';\n\nfunction MyInfo() {\n  //const classes = useStyles();\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  //const authorPost = useSelector((state) => state.users);\n  const author = useSelector((state) => state.auth.userData.user);\n\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ images: [] });\n\n  useEffect(() => {\n    dispatch(getUser(id));\n    dispatch(getUserPosts(id));\n  }, [dispatch, id]);\n\n  function handleOpen() {\n    setState({ ...state, open: true });\n  }\n\n  function handleSave(files) {\n    const reader = new FileReader();\n\n    if (files[0]) {\n      reader.readAsDataURL(files[0]);\n    }\n    reader.addEventListener(\n      'load',\n      function () {\n        dispatch(changeAvatar(reader.result));\n        setState({ ...state, open: false, files: reader.result });\n      },\n      false\n    );\n  }\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <>\n      <Avatar\n        src={\n          author.avatar ||\n          state.files ||\n          'https://i.pinimg.com/originals/2e/f5/38/2ef538b144db555f8dcd4bbc34c17e84.jpg'\n        }\n        style={{\n          width: '150px',\n          height: '150px',\n          padding: '20px',\n        }}\n        onClick={handleOpen}\n      />\n      <DropzoneDialog\n        open={state.open}\n        onSave={handleSave}\n        acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n        showPreviews={true}\n        maxFileSize={5000000}\n        onClose={handleClose}\n      />\n\n      <h1>{author.name}</h1>\n      <h2>{author.email}</h2>\n\n      <button onClick={() => dispatch(addFriend(author.id))}>Add Friend</button>\n    </>\n  );\n}\n\nexport default MyInfo;\n","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyPosts.jsx",["248","249","250","251","252"],"import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser, getUserPosts } from '../Redux/Action/userAction';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\n\nimport { useStyles } from '../Components/Posts/ViewPost/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nfunction MyPosts() {\n  const classes = useStyles();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const author = useSelector((state) => state.auth.userData.user);\n  const authorPost = useSelector((state) => state.users);\n\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ images: [] });\n\n  useEffect(() => {\n    dispatch(getUser(id));\n    dispatch(getUserPosts(id));\n  }, [dispatch, id]);\n\n  return (\n    <>\n      {authorPost.userPosts.map((post) => (\n        <div>\n          <Card fullwidth className={classes.root}>\n            <CardHeader\n              avatar={\n                <Avatar className={classes.avatar} src={author.avatar}></Avatar>\n              }\n              action={\n                <IconButton aria-label='settings'>\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              title={author.name}\n              subheader={\n                'Posted  ' +\n                moment(post.createdAt).fromNow() +\n                (post.createdAt != post.createdAt\n                  ? ' (edited ' + moment(post.updatedAt).fromNow() + ')'\n                  : '')\n              }\n            />\n\n            <CardContent>\n              <FormControl>\n                <Typography variant='body2' color='inherit' component='p'>\n                  <div>\n                    {post.images.length ? (\n                      <img\n                        src={post.images}\n                        alt=''\n                        style={{\n                          width: '200px',\n                          height: '200px',\n                          padding: '20px',\n                        }}\n                      />\n                    ) : null}\n                    <h4>{post.message}</h4>\n                  </div>\n                </Typography>\n              </FormControl>\n            </CardContent>\n          </Card>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default MyPosts;\n","/home/nisha/Documents/fbw32/redux/src/MyProfile/MyFriends.jsx",["253"],"import { Avatar } from '@material-ui/core';\nimport React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addFriend,\n  getUserFriends,\n  unFriend,\n} from '../Redux/Action/userAction';\n\nfunction MyFriends() {\n  const dispatch = useDispatch();\n  //const classes = useStyles();\n  const userData = useSelector((state) => state.users.userData);\n  const users = useSelector((state) => state.users.users);\n  useEffect(() => dispatch(getUserFriends(userData.friends)), []);\n\n  return (\n    <>\n      <ul>\n        {userData.friends.map((id) => {\n          const user = users[id];\n          if (!user) return `${id}`;\n          return (\n            <li>\n              <Avatar src={user.avatar}></Avatar>\n              {user.name}\n              <button onClick={() => dispatch(addFriend(id))}>\n                Approve User\n              </button>\n              <button onClick={() => dispatch(unFriend(id))}>\n                Reject User\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default MyFriends;\n","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/UserProfile.jsx",["254"],"/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/UserFriends.jsx",["255","256"],"/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/userPosts.jsx",["257","258"],"import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser, getUserPosts } from '../../Redux/Action/userAction';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\n\nimport { useStyles } from '../Posts/ViewPost/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nfunction UserPosts() {\n  const classes = useStyles();\n\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  console.log(id);\n\n  const user = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(getUser(id));\n    dispatch(getUserPosts(id));\n  }, [dispatch, id]);\n\n  console.log(user.userPosts);\n\n  return (\n    <>\n      {user.userPosts.map((post) => (\n        <div>\n          <Card fullwidth className={classes.root}>\n            <CardHeader\n              avatar={\n                <Avatar\n                  className={classes.avatar}\n                  src={user.userData.avatar}\n                ></Avatar>\n              }\n              action={\n                <IconButton aria-label='settings'>\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              title={user.userData.name}\n              subheader={\n                'Posted  ' +\n                moment(post.createdAt).fromNow() +\n                (post.createdAt != post.createdAt\n                  ? ' (edited ' + moment(post.updatedAt).fromNow() + ')'\n                  : '')\n              }\n            />\n\n            <CardContent>\n              <FormControl>\n                <Typography variant='body2' color='inherit' component='p'>\n                  <h3>{post.message}</h3>\n                </Typography>\n              </FormControl>\n            </CardContent>\n          </Card>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default UserPosts;\n\n// import {\n//   Avatar,\n//   Card,\n//   CardActions,\n//   CardContent,\n//   CardHeader,\n//   Container,\n//   FormControl,\n//   Hidden,\n//   IconButton,\n//   Popper,\n//   Typography,\n// } from '@material-ui/core';\n// import moment from 'moment';\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\n// import ShareIcon from '@material-ui/icons/Share';\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import EditIcon from '@material-ui/icons/Edit';\n// import AddCommentIcon from '@material-ui/icons/AddComment';\n// //import { FaAngry, AiOutlineFrown } from '@react-icons/all-files/fa/FaBeer';\n// import { FaFrown } from 'react-icons/fa';\n// import {\n//   AiFillLike,\n//   AiFillDislike,\n//   AiFillHeart,\n//   AiFillFrown,\n// } from 'react-icons/ai';\n// // import {\n// //   likePost,\n// //   removePost,\n// //   deleteReaction,\n// // } from '';\n// import Comment from '../Posts/Comment/Comment';\n// import Editpost from '../Posts/EditPost/EditPost';\n// import { useStyles } from '../Posts/ViewPost/styles';\n\n// import {\n//   FaRegGrinSquintTears,\n//   FaAngry,\n//   FaRegLaughSquint,\n// } from 'react-icons/fa';\n// import {\n//   deleteReaction,\n//   likePost,\n//   removePost,\n// } from '../../Redux/Action/postAction';\n// import { useParams } from 'react-router-dom';\n// import { getUser, getUserPosts } from '../../Redux/Action/userAction';\n\n// function Post({ index, post }) {\n//   const classes = useStyles();\n\n//   const { id } = useParams();\n//   console.log(id);\n\n//   const user = useSelector((state) => state.users);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(getUser(id));\n//     dispatch(getUserPosts(id));\n//   }, [dispatch, id]);\n\n//   console.log(user.userPosts);\n\n//   const [showEdit, setShowEdit] = useState(false);\n//   const [showComment, setShowComment] = useState(false);\n//   const [images, setImages] = useState({ images: [] });\n//   const [selected, setSelected] = useState(-1);\n\n//   const IconForReaction = {\n//     Like: <AiFillLike />,\n//     Hate: <AiFillDislike />,\n//     Love: <AiFillHeart />,\n//     Angry: <FaAngry />,\n//     Frown: <AiFillFrown />,\n//     Rofl: <FaRegGrinSquintTears />,\n//     Lol: <FaRegLaughSquint />,\n//   };\n\n//   // const [state, setState] = useState({\n//   //   reaction: {\n//   //     Like: user.userPosts.yourReactions.Like || false,\n//   //     Hate: user.userPosts.yourReactions.Hate || false,\n//   //     Frown: user.userPosts.yourReactions.Frown || false,\n//   //     Angry: user.userPosts.yourReactions.Angry || false,\n//   //     Lol: user.userPosts.yourReactions.LOl || false,\n//   //     Love: user.userPosts.yourReactions.Love || false,\n//   //     Rofl: user.userPosts.yourReactions.Rolf || false,\n//   //   },\n//   // });\n\n//   const [open, setOpen] = useState(false);\n//   const [anchor, setAnchor] = useState(null);\n\n//   return (\n//     <>\n\n//       <Card key={index} fullwidth className={classes.root}>\n// {user.userPosts.map((post) => (\n\n//         <CardHeader\n//           avatar={<Avatar className={classes.avatar}>N</Avatar>}\n//           action={\n//             <IconButton aria-label='settings'>\n//               <MoreVertIcon />\n//             </IconButton>\n//           }\n//           title={user.userData.name}\n//           subheader={\n//             'Posted  ' +\n//             moment(post.createdAt).fromNow() +\n//             (post.createdAt != post.createdAt\n//               ? ' (edited ' + moment(post.updatedAt).fromNow() + ')'\n//               : '')\n//           }\n//         />\n\n//         <CardContent>\n//           <FormControl>\n//             <Typography variant='body2' color='textSecondary' component='p'>\n//               {post.images.length ? (\n//                 <img\n//                   src={post.images || null}\n//                   alt=''\n//                   style={{\n//                     width: '200px',\n//                     height: '200px',\n//                     padding: '20px',\n//                   }}\n//                 />\n//               ) : null}\n\n//               {post.message}\n//             </Typography>\n//           </FormControl>\n//         </CardContent>\n\n//         <CardActions disableSpacing>\n//           <IconButton\n//             onClick={(e) => {\n//               setOpen(true);\n//               setAnchor(e.target);\n//             }}\n//           >\n//             <ThumbUpAltIcon />\n//           </IconButton>\n//           {/*\n//           <Popper id={post.id} open={open} anchorEl={anchor}>\n//             <div className={classes.paper}>\n//               {Object.keys(IconForReaction).map((reaction) => (\n//                 <button\n//                   className={post.yourReactions[reaction] ? classes.like : ''}\n//                   key={reaction}\n//                   onClick={(e) => {\n//                     post.yourReactions[reaction]\n//                       ? dispatch(deleteReaction(post.id, reaction))\n//                       : dispatch(likePost(post.id, reaction));\n//                   }}\n//                 >\n//                   {IconForReaction[reaction]}\n//                 </button>\n//               ))}\n//             </div>\n//           </Popper> */}\n\n//           <IconButton aria-label='share'>\n//             <ShareIcon />\n//           </IconButton>\n\n//           <IconButton\n//             onClick={() => {\n//               dispatch(removePost(post.id));\n//             }}\n//           >\n//             <DeleteIcon />\n//           </IconButton>\n\n//           <IconButton\n//             onClick={() => {\n//               setShowEdit(true);\n//               setSelected(index);\n//             }}\n//           >\n//             <EditIcon />\n//           </IconButton>\n\n//           <IconButton\n//             onClick={() => {\n//               setShowComment(true);\n//               setSelected(index);\n//             }}\n//           >\n//             <AddCommentIcon />\n//           </IconButton>\n\n//           {showEdit && selected === index ? (\n//             <Editpost post={post} setSelected={setSelected} />\n//           ) : null}\n\n//           {showComment && selected === index ? (\n//             <Comment post={post} setSelected={setSelected} />\n//           ) : null}\n//         </CardActions>\n//         )\n//       </Card>\n\n//       {post.comments.map((post, index) => (\n//         <Post post={post} key={post.id} index={index} />\n//       ))}\n//       </>\n//       );\n// }\n\n// export default Post;\n","/home/nisha/Documents/fbw32/redux/src/Components/UserProfile/styles.jsx",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"259","replacedBy":"263"},{"ruleId":"261","replacedBy":"264"},{"ruleId":"259","replacedBy":"265"},{"ruleId":"261","replacedBy":"266"},{"ruleId":"259","replacedBy":"267"},{"ruleId":"261","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":17,"column":9,"nodeType":"271","messageId":"272","endLine":17,"endColumn":14},{"ruleId":"259","replacedBy":"273"},{"ruleId":"261","replacedBy":"274"},{"ruleId":"269","severity":1,"message":"275","line":15,"column":8,"nodeType":"271","messageId":"272","endLine":15,"endColumn":16},{"ruleId":"269","severity":1,"message":"276","line":16,"column":8,"nodeType":"271","messageId":"272","endLine":16,"endColumn":22},{"ruleId":"269","severity":1,"message":"277","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":13},{"ruleId":"259","replacedBy":"278"},{"ruleId":"261","replacedBy":"279"},{"ruleId":"269","severity":1,"message":"280","line":26,"column":11,"nodeType":"271","messageId":"272","endLine":26,"endColumn":22},{"ruleId":"281","severity":1,"message":"282","line":27,"column":17,"nodeType":"283","messageId":"284","endLine":27,"endColumn":19},{"ruleId":"281","severity":1,"message":"282","line":42,"column":19,"nodeType":"283","messageId":"284","endLine":42,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":51,"column":19,"nodeType":"283","messageId":"284","endLine":51,"endColumn":21},{"ruleId":"259","replacedBy":"285"},{"ruleId":"261","replacedBy":"286"},{"ruleId":"259","replacedBy":"287"},{"ruleId":"261","replacedBy":"288"},{"ruleId":"259","replacedBy":"289"},{"ruleId":"261","replacedBy":"290"},{"ruleId":"269","severity":1,"message":"291","line":9,"column":10,"nodeType":"271","messageId":"272","endLine":9,"endColumn":14},{"ruleId":"269","severity":1,"message":"292","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":17},{"ruleId":"269","severity":1,"message":"293","line":12,"column":8,"nodeType":"271","messageId":"272","endLine":12,"endColumn":18},{"ruleId":"259","replacedBy":"294"},{"ruleId":"261","replacedBy":"295"},{"ruleId":"269","severity":1,"message":"296","line":3,"column":17,"nodeType":"271","messageId":"272","endLine":3,"endColumn":25},{"ruleId":"269","severity":1,"message":"297","line":4,"column":10,"nodeType":"271","messageId":"272","endLine":4,"endColumn":21},{"ruleId":"269","severity":1,"message":"298","line":11,"column":9,"nodeType":"271","messageId":"272","endLine":11,"endColumn":13},{"ruleId":"269","severity":1,"message":"299","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":23,"column":10,"nodeType":"271","messageId":"272","endLine":23,"endColumn":15},{"ruleId":"269","severity":1,"message":"300","line":23,"column":17,"nodeType":"271","messageId":"272","endLine":23,"endColumn":25},{"ruleId":"259","replacedBy":"301"},{"ruleId":"261","replacedBy":"302"},{"ruleId":"269","severity":1,"message":"298","line":45,"column":9,"nodeType":"271","messageId":"272","endLine":45,"endColumn":13},{"ruleId":"269","severity":1,"message":"303","line":50,"column":10,"nodeType":"271","messageId":"272","endLine":50,"endColumn":16},{"ruleId":"269","severity":1,"message":"304","line":50,"column":18,"nodeType":"271","messageId":"272","endLine":50,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":66,"column":10,"nodeType":"271","messageId":"272","endLine":66,"endColumn":15},{"ruleId":"269","severity":1,"message":"300","line":66,"column":17,"nodeType":"271","messageId":"272","endLine":66,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":102,"column":14,"nodeType":"283","messageId":"307","endLine":102,"endColumn":46},{"ruleId":"281","severity":1,"message":"308","line":102,"column":29,"nodeType":"283","messageId":"284","endLine":102,"endColumn":31},{"ruleId":"259","replacedBy":"309"},{"ruleId":"261","replacedBy":"310"},{"ruleId":"269","severity":1,"message":"311","line":11,"column":9,"nodeType":"271","messageId":"272","endLine":11,"endColumn":16},{"ruleId":"269","severity":1,"message":"312","line":5,"column":22,"nodeType":"271","messageId":"272","endLine":5,"endColumn":32},{"ruleId":"269","severity":1,"message":"313","line":19,"column":9,"nodeType":"271","messageId":"272","endLine":19,"endColumn":16},{"ruleId":"269","severity":1,"message":"314","line":9,"column":10,"nodeType":"271","messageId":"272","endLine":9,"endColumn":16},{"ruleId":"269","severity":1,"message":"315","line":9,"column":26,"nodeType":"271","messageId":"272","endLine":9,"endColumn":29},{"ruleId":"269","severity":1,"message":"316","line":9,"column":31,"nodeType":"271","messageId":"272","endLine":9,"endColumn":35},{"ruleId":"269","severity":1,"message":"317","line":10,"column":10,"nodeType":"271","messageId":"272","endLine":10,"endColumn":18},{"ruleId":"269","severity":1,"message":"314","line":10,"column":10,"nodeType":"271","messageId":"272","endLine":10,"endColumn":16},{"ruleId":"269","severity":1,"message":"315","line":10,"column":26,"nodeType":"271","messageId":"272","endLine":10,"endColumn":29},{"ruleId":"269","severity":1,"message":"316","line":10,"column":31,"nodeType":"271","messageId":"272","endLine":10,"endColumn":35},{"ruleId":"269","severity":1,"message":"317","line":11,"column":10,"nodeType":"271","messageId":"272","endLine":11,"endColumn":18},{"ruleId":"269","severity":1,"message":"313","line":18,"column":9,"nodeType":"271","messageId":"272","endLine":18,"endColumn":16},{"ruleId":"269","severity":1,"message":"313","line":22,"column":9,"nodeType":"271","messageId":"272","endLine":22,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":28,"column":10,"nodeType":"271","messageId":"272","endLine":28,"endColumn":15},{"ruleId":"269","severity":1,"message":"300","line":28,"column":17,"nodeType":"271","messageId":"272","endLine":28,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":53,"column":18,"nodeType":"283","messageId":"307","endLine":53,"endColumn":50},{"ruleId":"281","severity":1,"message":"308","line":53,"column":33,"nodeType":"283","messageId":"284","endLine":53,"endColumn":35},{"ruleId":"318","severity":1,"message":"319","line":16,"column":63,"nodeType":"320","endLine":16,"endColumn":65,"suggestions":"321"},{"ruleId":"269","severity":1,"message":"322","line":11,"column":8,"nodeType":"271","messageId":"272","endLine":11,"endColumn":15},{"ruleId":"269","severity":1,"message":"323","line":5,"column":26,"nodeType":"271","messageId":"272","endLine":5,"endColumn":34},{"ruleId":"318","severity":1,"message":"319","line":14,"column":63,"nodeType":"320","endLine":14,"endColumn":65,"suggestions":"324"},{"ruleId":"305","severity":1,"message":"306","line":56,"column":18,"nodeType":"283","messageId":"307","endLine":56,"endColumn":50},{"ruleId":"281","severity":1,"message":"308","line":56,"column":33,"nodeType":"283","messageId":"284","endLine":56,"endColumn":35},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],["325"],["326"],["325"],["326"],["325"],["326"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar",["325"],["326"],"'SnackBar' is defined but never used.","'SnackbarStatus' is defined but never used.","'axios' is defined but never used.",["325"],["326"],"'newPostData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["325"],["326"],["325"],["326"],["325"],["326"],"'Link' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.",["325"],["326"],"'useState' is defined but never used.","'useDispatch' is defined but never used.","'user' is assigned a value but never used.","'moment' is defined but never used.","'setState' is assigned a value but never used.",["325"],["326"],"'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","Expected '!==' and instead saw '!='.",["325"],["326"],"'classes' is assigned a value but never used.","'statusShow' is defined but never used.","'history' is assigned a value but never used.","'AppBar' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabPanel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userData.friends'. Either include them or remove the dependency array.","ArrayExpression",["327"],"'Friends' is defined but never used.","'unFriend' is defined but never used.",["328"],"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"329","fix":"331"},"Update the dependencies array to be: [dispatch, userData.friends]",{"range":"332","text":"333"},{"range":"334","text":"333"},[509,511],"[dispatch, userData.friends]",[533,535]]