[{"/home/nisha/Documents/fbw32/redux/src/index.js":"1","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/styles.js":"2","/home/nisha/Documents/fbw32/redux/src/Redux/Root.js":"3","/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/authReducer.js":"4","/home/nisha/Documents/fbw32/redux/src/App.jsx":"5","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/Login.jsx":"6","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/styles.js":"7","/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/Register.jsx":"8","/home/nisha/Documents/fbw32/redux/src/Redux/Action/authAction.js":"9","/home/nisha/Documents/fbw32/redux/src/store.js":"10","/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/postReducer.js":"11","/home/nisha/Documents/fbw32/redux/src/Redux/Action/postAction.js":"12","/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/styles.js":"13","/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/AddPosts.jsx":"14","/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/styles.jsx":"15","/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/EditPost.jsx":"16","/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/Navigation.jsx":"17","/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/styles.jsx":"18","/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/AuthButton.js":"19","/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/Auth.js":"20","/home/nisha/Documents/fbw32/redux/src/ifAuth.js":"21","/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/styles.jsx":"22","/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/Posts.jsx":"23"},{"size":414,"mtime":1606505419862,"results":"24","hashOfConfig":"25"},{"size":474,"mtime":1606507128238,"results":"26","hashOfConfig":"25"},{"size":220,"mtime":1606744653734,"results":"27","hashOfConfig":"25"},{"size":981,"mtime":1606837254611,"results":"28","hashOfConfig":"25"},{"size":984,"mtime":1606859593170,"results":"29","hashOfConfig":"25"},{"size":2574,"mtime":1606853727333,"results":"30","hashOfConfig":"25"},{"size":474,"mtime":1606508105857,"results":"31","hashOfConfig":"25"},{"size":2732,"mtime":1606854699013,"results":"32","hashOfConfig":"25"},{"size":1412,"mtime":1606855587651,"results":"33","hashOfConfig":"25"},{"size":651,"mtime":1606743085904,"results":"34","hashOfConfig":"25"},{"size":578,"mtime":1606751398823,"results":"35","hashOfConfig":"25"},{"size":1283,"mtime":1606832105534,"results":"36","hashOfConfig":"25"},{"size":377,"mtime":1606745141703,"results":"37","hashOfConfig":"25"},{"size":1453,"mtime":1606773108583,"results":"38","hashOfConfig":"25"},{"size":377,"mtime":1606747316289,"results":"39","hashOfConfig":"25"},{"size":1479,"mtime":1606832029892,"results":"40","hashOfConfig":"25"},{"size":6246,"mtime":1606859485985,"results":"41","hashOfConfig":"25"},{"size":1571,"mtime":1606753290385,"results":"42","hashOfConfig":"25"},{"size":221,"mtime":1606774612229,"results":"43","hashOfConfig":"25"},{"size":454,"mtime":1606853710724,"results":"44","hashOfConfig":"25"},{"size":185,"mtime":1606774412131,"results":"45","hashOfConfig":"25"},{"size":507,"mtime":1606857926769,"results":"46","hashOfConfig":"25"},{"size":3648,"mtime":1606866188938,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"4xq3wd",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},"/home/nisha/Documents/fbw32/redux/src/index.js",[],["104","105"],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/styles.js",[],["106","107"],"/home/nisha/Documents/fbw32/redux/src/Redux/Root.js",[],"/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/authReducer.js",[],["108","109"],"/home/nisha/Documents/fbw32/redux/src/App.jsx",["110"],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Login/Login.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/styles.js",[],["111","112"],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/Register/Register.jsx",[],["113","114"],"/home/nisha/Documents/fbw32/redux/src/Redux/Action/authAction.js",[],"/home/nisha/Documents/fbw32/redux/src/store.js",[],"/home/nisha/Documents/fbw32/redux/src/Redux/Reducer/postReducer.js",[],["115","116"],"/home/nisha/Documents/fbw32/redux/src/Redux/Action/postAction.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/styles.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/AddPost/AddPosts.jsx",["117","118","119","120","121","122","123"],"import {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Container,\n  IconButton,\n  Paper,\n  TextField,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { postTheme } from './styles';\nimport { Link } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../../../Redux/Action/postAction';\n\nexport default function AddPost() {\n  const classes = useStyles();\n  const [postMessage, setPostMessage] = useState({ message: '' });\n  const dispatch = useDispatch();\n\n  return (\n    <Card className={classes.root} variant='outlined'>\n      <CardHeader title='Create Post' />\n      <form noValidate>\n        <div>\n          <TextField\n            id='outlined-multiline-static'\n            label='Write Post Here'\n            multiline\n            rows={4}\n            value={postMessage.message}\n            onChange={(e) =>\n              setPostMessage({ ...postMessage, message: e.target.value })\n            }\n            variant='outlined'\n          />\n        </div>\n        <CardActions>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(addPost(postMessage));\n            }}\n          >\n            <Link to='/nisa'>Post</Link>\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n}\n","/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/styles.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/EditPost/EditPost.jsx",["124"],"import {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  TextField,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { editPost } from '../../../Redux/Action/postAction';\n\nexport default function Editpost({ post, setSelected }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [editPostMessage, setEditPostMessage] = useState({\n    message: post.message,\n    id: post.id,\n  });\n\n  return (\n    <Card className={classes.root} variant='outlined'>\n      <CardHeader title='Edit Post' />\n      <form noValidate>\n        <div>\n          <TextField\n            id='outlined-multiline-static'\n            label='Edit Your Post '\n            multiline\n            rows={4}\n            value={editPostMessage.message}\n            onChange={(e) =>\n              setEditPostMessage({\n                ...editPostMessage,\n                message: e.target.value,\n              })\n            }\n            variant='outlined'\n          />\n        </div>\n        <CardActions>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(editPost(editPostMessage));\n              setSelected(-1);\n            }}\n          >\n            SavePost\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n}\n",["125","126"],"/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/Navigation.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Container/Navigation/styles.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/AuthButton.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Auth/AuthInfo/Auth.js",[],"/home/nisha/Documents/fbw32/redux/src/ifAuth.js",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/styles.jsx",[],"/home/nisha/Documents/fbw32/redux/src/Components/Posts/ViewPost/Posts.jsx",["127","128"],"import {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Container,\n  Hidden,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { removePost } from '../../../Redux/Action/postAction';\nimport Editpost from '../EditPost/EditPost';\nimport { useStyles } from './styles';\n\nfunction Posts() {\n  const classes = useStyles();\n\n  const posts = useSelector((state) => state.posts);\n  const [showEdit, setShowEdit] = useState(false);\n  const [selected, setSelected] = useState(-1);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {/* {posts.postData.map((post, index) => {\n        return (\n          <div key={index}>\n            <h1>{post.message}</h1>\n\n            <IconButton\n              onClick={() => {\n                dispatch(removePost(post.id));\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n\n            <IconButton\n              onClick={() => {\n                setShowEdit(true);\n                setSelected(index);\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n\n            {showEdit && selected === index ? (\n              <Editpost post={post} setSelected={setSelected} />\n            ) : null}\n          </div>\n        );\n      })} */}\n\n      <Container className={classes.rootGrid}>\n        {posts.postData.map((post, index) => {\n          return (\n            <Card key={index} fullwidth className={classes.root}>\n              <CardHeader\n                avatar={<Avatar className={classes.avatar}>N</Avatar>}\n                action={\n                  <IconButton aria-label='settings'>\n                    <MoreVertIcon />\n                  </IconButton>\n                }\n                title={post.author.name}\n                subheader={\n                  'Posted at ' +\n                  moment(post.createdAt).format('DD-MMM-YYYY hh:mm:ss')\n                  // subheader={'Posted at ' + moment(post.createdAt).fromNow()}\n                }\n              />\n\n              <CardContent>\n                <Typography variant='body2' color='textSecondary' component='p'>\n                  {post.message}\n                </Typography>\n              </CardContent>\n\n              <CardActions disableSpacing>\n                <IconButton aria-label='add to favorites'>\n                  <FavoriteIcon />\n                </IconButton>\n\n                <IconButton aria-label='share'>\n                  <ShareIcon />\n                </IconButton>\n\n                <IconButton\n                  onClick={() => {\n                    dispatch(removePost(post.id));\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n\n                <IconButton\n                  onClick={() => {\n                    setShowEdit(true);\n                    setSelected(index);\n                  }}\n                >\n                  <EditIcon />\n                </IconButton>\n\n                {showEdit && selected === index ? (\n                  <Editpost post={post} setSelected={setSelected} />\n                ) : null}\n              </CardActions>\n            </Card>\n          );\n        })}\n      </Container>\n    </div>\n  );\n}\n\nexport default Posts;\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"129","replacedBy":"135"},{"ruleId":"131","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":13,"column":9,"nodeType":"139","messageId":"140","endLine":13,"endColumn":14},{"ruleId":"129","replacedBy":"141"},{"ruleId":"131","replacedBy":"142"},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","replacedBy":"144"},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","replacedBy":"146"},{"ruleId":"137","severity":1,"message":"147","line":2,"column":3,"nodeType":"139","messageId":"140","endLine":2,"endColumn":9},{"ruleId":"137","severity":1,"message":"148","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":6,"endColumn":14},{"ruleId":"137","severity":1,"message":"149","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":12},{"ruleId":"137","severity":1,"message":"150","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":12},{"ruleId":"137","severity":1,"message":"151","line":10,"column":3,"nodeType":"139","messageId":"140","endLine":10,"endColumn":13},{"ruleId":"137","severity":1,"message":"152","line":11,"column":3,"nodeType":"139","messageId":"140","endLine":11,"endColumn":8},{"ruleId":"137","severity":1,"message":"153","line":15,"column":10,"nodeType":"139","messageId":"140","endLine":15,"endColumn":19},{"ruleId":"137","severity":1,"message":"154","line":9,"column":10,"nodeType":"139","messageId":"140","endLine":9,"endColumn":14},{"ruleId":"129","replacedBy":"155"},{"ruleId":"131","replacedBy":"156"},{"ruleId":"137","severity":1,"message":"157","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":9},{"ruleId":"137","severity":1,"message":"154","line":15,"column":10,"nodeType":"139","messageId":"140","endLine":15,"endColumn":14},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],["158"],["159"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar",["158"],["159"],["158"],["159"],["158"],["159"],"'Avatar' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Container' is defined but never used.","'IconButton' is defined but never used.","'Paper' is defined but never used.","'postTheme' is defined but never used.","'Link' is defined but never used.",["158"],["159"],"'Hidden' is defined but never used.","no-global-assign","no-unsafe-negation"]